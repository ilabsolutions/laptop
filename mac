#!/bin/sh

# Welcome to the thoughtbot laptop script!
# Be prepared to turn your laptop (or desktop, no haters here)
# into an awesome development machine.

HOMEBREW_PREFIX="/usr/local"

main() {
# shellcheck disable=SC2154
trap 'ret=$?; test $ret -ne 0 && printf "failed\n\n" >&2; exit $ret' EXIT

set -e

if [ ! -d "$HOME/.bin/" ]; then
  mkdir "$HOME/.bin"
fi

if [ ! -f "$HOME/.zshrc" ]; then
  touch "$HOME/.zshrc"
fi

# shellcheck disable=SC2016
append_to_zshrc 'export PATH="$HOME/.bin:$PATH"'

if [ "$(ls -dl /usr/local | awk '{ print $4 }')" != "admin" ];then
	echo "Amending group ownership of /usr/local"
	sudo chgrp -R admin /usr/local 
	sudo chmod -R g+w /usr/local
fi

case "$SHELL" in
  */zsh) : ;;
  *)
    fancy_echo "Changing your shell to zsh ..."
      chsh -s "$(which zsh)"
    ;;
esac

if ! command -v brew >/dev/null; then
  fancy_echo "Installing Homebrew ..."
    curl -fsS \
      'https://raw.githubusercontent.com/Homebrew/install/master/install' | ruby

    append_to_zshrc '# recommended by brew doctor'

    # shellcheck disable=SC2016
    append_to_zshrc 'export PATH="/usr/local/bin:$PATH"' 1

    export PATH="/usr/local/bin:$PATH"
fi

if brew list | grep -Fq brew-cask; then
  fancy_echo "Uninstalling old Homebrew-Cask ..."
  brew uninstall --force brew-cask
fi

# Updating to latest OpenSSL and linking to default
if [ ! -d /usr/local/opt/openssl ]; then
	echo "Installing latest OpenSSL version.  This will take a while..."
	cd /tmp
	curl -s --remote-name https://www.openssl.org/source/openssl-1.1.0e.tar.gz > /dev/null
	tar -xzf openssl-1.1.0e.tar.gz 
	cd openssl-1.1.0e
	./config --prefix=/usr/local/ruby_devenv/openssl-1.1.0e > /dev/null
	make -sw depend > /dev/null
	make -sw > /dev/null
	make -sw install > /dev/null
	ln -s /usr/local/ruby_devenv/openssl-1.1.0e /usr/local/opt/openssl || true
	cd /tmp && rm -rf /tmp/openssl-1.1.0e.tar.gz /tmp/openssl-1.1.0e
fi

fancy_echo "Updating Homebrew formulae ..."
brew update
brew link gdbm
brew bundle --file=- <<EOF
tap "thoughtbot/formulae"
tap "homebrew/services"

# Unix
brew "ctags"
brew "git"
brew "rcm"
brew "reattach-to-user-namespace"
brew "the_silver_searcher"
brew "tmux"
brew "vim"
brew "zsh"
brew "cmake"
brew "ruby-build"
brew "rbenv"

# GitHub
brew "hub"

# Dev tools
cask "kdiff3"

# Testing
brew "qt"

# Programming languages
brew "libyaml" # should come after openssl
brew "node"
cask "java"

# Databases
brew "redis", restart_service: true
brew "mysql", restart_service: true
EOF

fancy_echo "Configuring Ruby ..."
find_latest_ruby() {
  rbenv install -l | grep -v - | tail -1 | sed -e 's/^ *//'
}

ruby_version="$(find_latest_ruby)"
# shellcheck disable=SC2016
append_to_zshrc 'eval "$(rbenv init - --no-rehash)"' 1
eval "$(rbenv init -)"

if ! rbenv versions | grep -Fq "$ruby_version"; then
	RUBY_CONFIGURE_OPTS=--with-openssl-dir=/usr/local/opt/openssl rbenv install -s "$ruby_version"
fi

rbenv global "$ruby_version"
rbenv shell "$ruby_version"
gem update --system
gem_install_or_update 'bundler'
number_of_cores=$(sysctl -n hw.ncpu)
bundle config --global jobs $((number_of_cores - 1))

if [ -f "$HOME/.laptop.local" ]; then
  fancy_echo "Running your customizations from ~/.laptop.local ..."
  # shellcheck disable=SC1090
  . "$HOME/.laptop.local"
fi
}

fancy_echo() {
  local fmt="$1"; shift

  # shellcheck disable=SC2059
  printf "\n$fmt\n" "$@"
}

append_to_zshrc() {
  local text="$1" zshrc
  local skip_new_line="${2:-0}"

  if [ -w "$HOME/.zshrc.local" ]; then
    zshrc="$HOME/.zshrc.local"
  else
    zshrc="$HOME/.zshrc"
  fi

  if ! grep -Fqs "$text" "$zshrc"; then
    if [ "$skip_new_line" -eq 1 ]; then
      printf "%s\n" "$text" >> "$zshrc"
    else
      printf "\n%s\n" "$text" >> "$zshrc"
    fi
  fi
}

gem_install_or_update() {
  if gem list "$1" --installed > /dev/null; then
    gem update "$@"
  else
    gem install "$@"
    rbenv rehash
  fi
}

# Script entry point
main "$@"
